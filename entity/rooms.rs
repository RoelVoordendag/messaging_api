//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.14

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "rooms")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    pub name: String,
    pub created_at: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::message_room::Entity")]
    MessageRoom,
}

impl Related<super::message_room::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::MessageRoom.def()
    }
}

impl Related<super::messages::Entity> for Entity {
    fn to() -> RelationDef {
        super::message_room::Relation::Messages.def()
    }
    fn via() -> Option<RelationDef> {
        Some(super::message_room::Relation::Rooms.def().rev())
    }
}

impl ActiveModelBehavior for ActiveModel {}
